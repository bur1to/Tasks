swagger: "2.0"
info: 
  version: 1.0.0
  title: JavaScript base project
  description: This is base project what can create users and comments with authorization

host: localhost:3000

basePath: /

schemes: 
   - http

consumes:
   - application/json

produces: 
   - application/json
paths:
   /users:
     x-swagger-router-controller: users
     get:
       description: Return list of users
       operationId: getUsers
       responses:
         '200':
           description: Success
           schema: 
             type: array
             items:
              $ref: '#/definitions/User'
         '500':
           description: Error
           schema:
            $ref: '#/definitions/ErrorResponse'
     post:
       description: Create new user
       operationId: createUser
       parameters:
         - name: user
           description: User properties
           in: body
           required: true
           schema:
            $ref: '#/definitions/UserPost'
       responses:
         '200':
           description: Success
           schema:
            $ref: '#/definitions/GeneralResponse'
         '400':
           description: Error
           schema:
            $ref: '#/definitions/ErrorResponse'
   /users/{id}:
     x-swagger-router-controller: users
     get:
       description: Return user by id
       operationId: getUser
       parameters:
        - name: id
          type: string
          in: path
          required: true
       responses:
         '200':
           description: Success
           schema:
            $ref: '#/definitions/User'
         '500':
           description: Error
           schema:
            $ref: '#/definitions/ErrorResponse'
     put:
       description: 'Update a user'
       operationId: updateUser
       parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
        - name: user
          description: User properties
          in: body
          required: true
          schema:
           $ref: '#/definitions/UserUpdate'
       responses:
         '200':
           description: Success
           schema:
            $ref: '#/definitions/GeneralResponse'
         '400':
           description: 'Error'
           schema:
            $ref: '#/definitions/ErrorResponse'
     delete:
       description: Delete user by id
       operationId: deleteUser
       parameters:
         - name: id
           description: User id
           type: string
           in: path
           required: true
       responses:
         '200':
           description: Success
           schema:
            $ref: '#/definitions/GeneralResponse'
         '500':
           description: Error
           schema:
            $ref: '#/definitions/ErrorResponse'
   /comments:
    x-swagger-router-controller: comments
    get:
     description: Return list of comments
     operationId: getComments
     responses:
       '200':
         description: Success
         schema: 
          type: array
          items:
            $ref: '#/definitions/Comment'
       '500':
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'
    post:
     description: Create new comment
     operationId: createComment
     parameters:
      - name: comment
        description: Comment properties
        in: body
        required: true
        schema:
         $ref: '#/definitions/Comment'
     responses:
       '200':
         description: Success
         schema:
          $ref: '#/definitions/GeneralResponse'
       '400':
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'
   /comments/{id}:
    x-swagger-router-controller: comments
    get:
     description: Return comment by id
     operationId: getComment
     parameters:
      - name: id
        type: string
        in: path
        required: true
     responses:
       '200':
         description: Success
         schema:
          $ref: '#/definitions/Comment'
       '500':
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'
    put:
     description: 'Update comment'
     operationId: updateComment
     parameters:
      - name: id
        description: Comment id
        type: string
        in: path
        required: true
      - name: comment
        description: Comment properties
        in: body
        required: true
        schema:
          $ref: '#/definitions/CommentUpdate'
     responses:
       '200':
         description: Success
         schema:
          $ref: '#/definitions/GeneralResponse'
       '400':
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'
    delete:
     description: Delete comment by id
     operationId: deleteComment
     parameters:
      - name: id
        description: Comment id
        type: string
        in: path
        required: true
     responses:
       '200':
         description: Success
         schema:
          $ref: '#/definitions/GeneralResponse'
       '500':
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'
   /auth:
    x-swagger-router-controller: authorization
    post:
     description: User authorization
     operationId: authorization
     parameters:
      - name: authorization
        description: Authorization properties
        in: body
        required: true
        schema:
         $ref: '#/definitions/Authorization'
     responses:
       '200':
         description: Success
         schema:
          $ref: '#/definitions/GeneralResponse'
       '400': 
         description: Error
         schema:
          $ref: '#/definitions/ErrorResponse'

definitions:
   User:
     properties:
       id: 
         type: string
       firstName:
         type: string
       lastName: 
         type: string
       email:
         type: string
       password:
         type: string
       salt: 
         type: string
       age: 
         type: integer
     required:
       - id
       - firstName
       - lastName
       - email
       - password
       - salt
       - age
   UserPost:
     properties:
      id:
       type: string
      firstName:
       type: string
      lastName: 
       type: string
      email:
       type: string
      password: 
       type: string
      salt:
       type: string
      age:
       type: integer
     required:
       - firstName
       - lastName
       - email
       - password
       - age
   UserUpdate:
     properties:
       firstName:
         type: string
       lastName: 
         type: string
       email:
         type: string
       password:
         type: string
       age: 
         type: integer
     required: false

   Comment:
     properties: 
      userId:
       type: string
      comment:
       type: string
     required:
      - userId
      - comment
   CommentUpdate:
     properties:
      userId:
       type: string
      comment:
       type: string
     required: false

   Authorization:
     properties:
      email:
       type: string
      password:
       type: string
     required:
      - email
      - password

   GeneralResponse:
     properties: 
       message: 
         type: string
     required:
       - message
       
   ErrorResponse:
     properties:
       message:
         type: string
     required:
       - message
